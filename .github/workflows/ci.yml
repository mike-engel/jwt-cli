on: [push, pull_request]
name: Continuous Integration

jobs:
  test:
    name: Test Suite on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        rust: [stable]
        include:
          - os: macos-latest
            artifact_prefix: macOS
            target: x86_64-apple-darwin
            binary_postfix: ""
          - os: ubuntu-latest
            artifact_prefix: linux
            target: x86_64-unknown-linux-musl
            binary_postfix: ""
          - os: windows-latest
            artifact_prefix: windows
            target: x86_64-pc-windows-msvc
            binary_postfix: ".exe"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        run: rustup update --no-self-update
      - name: Install target
        run: rustup target add ${{ matrix.target }}
      - name: Test
        run: cargo test --target=${{ matrix.target }}

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        run: rustup update --no-self-update
      - name: Check formatting
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        run: rustup update --no-self-update
      - name: Clippy Check
        run: cargo clippy -- -D warnings
